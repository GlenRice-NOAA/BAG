#############################################################################
# Makefile for building: libgeotrans.a
# Generated by qmake (1.07a) (Qt 3.3.3) on: Mon Jul 18 18:58:47 2005
# Project:  geotrans.pro
# Template: lib
# Command: $(QMAKE) -o Makefile_linux geotrans.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe ${IVSCOPTS} -w -g  -DQT_SHARED -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe ${IVSCCOPTS2} -w -g  -DQT_SHARED -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/local/qt/mkspecs/linux-g++ -I. -Iazeq -Ibng -Ignomonic -Ineys -Inzmg -Iomerc -Istereogr -Igeocent -Igeoref -Imercator -Idatum -Iellipse -Itranmerc -Iutm -Ipolarst -Iups -Imgrs -Ilambert -Ibonne -Icassini -Icyleqa -Ieqdcyl -Ieckert4 -Ieckert6 -Imiller -Imollweid -Iorthogr -Ipolycon -Isinusoid -Itrcyleqa -Igrinten -Igeoid -Ialbers -Iloccart -I$(QTDIR)/include -I.ui/ -I.moc/$(HOSTMACHINE)/
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/$(HOSTMACHINE)/

####### Files

HEADERS = albers/albers.h \
		azeq/azeq.h \
		bng/bng.h \
		bonne/bonne.h \
		cassini/cassini.h \
		cyleqa/cyleqa.h \
		datum/datum.h \
		eckert4/eckert4.h \
		eckert6/eckert6.h \
		ellipse/ellipse.h \
		eqdcyl/eqdcyl.h \
		geocent/geocent.h \
		geoid/geoid.h \
		georef/georef.h \
		gnomonic/gnomonic.h \
		grinten/grinten.h \
		lambert/lambert.h \
		loccart/loccart.h \
		mercator/mercator.h \
		mgrs/mgrs.h \
		miller/miller.h \
		mollweid/mollweid.h \
		neys/neys.h \
		nzmg/nzmg.h \
		omerc/omerc.h \
		orthogr/orthogr.h \
		polarst/polarst.h \
		polycon/polycon.h \
		sinusoid/sinusoid.h \
		stereogr/stereogr.h \
		tranmerc/tranmerc.h \
		trcyleqa/trcyleqa.h \
		ups/ups.h \
		utm/utm.h \
		engine.h
SOURCES = albers/albers.c \
		azeq/azeq.c \
		bng/bng.c \
		bonne/bonne.c \
		cassini/cassini.c \
		cyleqa/cyleqa.c \
		datum/datum.c \
		eckert4/eckert4.c \
		eckert6/eckert6.c \
		ellipse/ellipse.c \
		eqdcyl/eqdcyl.c \
		geocent/geocent.c \
		geoid/geoid.c \
		georef/georef.c \
		gnomonic/gnomonic.c \
		grinten/grinten.c \
		lambert/lambert.c \
		loccart/loccart.c \
		mercator/mercator.c \
		mgrs/mgrs.c \
		miller/miller.c \
		mollweid/mollweid.c \
		neys/neys.c \
		nzmg/nzmg.c \
		omerc/omerc.c \
		orthogr/orthogr.c \
		polarst/polarst.c \
		polycon/polycon.c \
		sinusoid/sinusoid.c \
		stereogr/stereogr.c \
		tranmerc/tranmerc.c \
		trcyleqa/trcyleqa.c \
		ups/ups.c \
		utm/utm.c \
		engine.c
OBJECTS = .obj/$(HOSTMACHINE)/albers.o \
		.obj/$(HOSTMACHINE)/azeq.o \
		.obj/$(HOSTMACHINE)/bng.o \
		.obj/$(HOSTMACHINE)/bonne.o \
		.obj/$(HOSTMACHINE)/cassini.o \
		.obj/$(HOSTMACHINE)/cyleqa.o \
		.obj/$(HOSTMACHINE)/datum.o \
		.obj/$(HOSTMACHINE)/eckert4.o \
		.obj/$(HOSTMACHINE)/eckert6.o \
		.obj/$(HOSTMACHINE)/ellipse.o \
		.obj/$(HOSTMACHINE)/eqdcyl.o \
		.obj/$(HOSTMACHINE)/geocent.o \
		.obj/$(HOSTMACHINE)/geoid.o \
		.obj/$(HOSTMACHINE)/georef.o \
		.obj/$(HOSTMACHINE)/gnomonic.o \
		.obj/$(HOSTMACHINE)/grinten.o \
		.obj/$(HOSTMACHINE)/lambert.o \
		.obj/$(HOSTMACHINE)/loccart.o \
		.obj/$(HOSTMACHINE)/mercator.o \
		.obj/$(HOSTMACHINE)/mgrs.o \
		.obj/$(HOSTMACHINE)/miller.o \
		.obj/$(HOSTMACHINE)/mollweid.o \
		.obj/$(HOSTMACHINE)/neys.o \
		.obj/$(HOSTMACHINE)/nzmg.o \
		.obj/$(HOSTMACHINE)/omerc.o \
		.obj/$(HOSTMACHINE)/orthogr.o \
		.obj/$(HOSTMACHINE)/polarst.o \
		.obj/$(HOSTMACHINE)/polycon.o \
		.obj/$(HOSTMACHINE)/sinusoid.o \
		.obj/$(HOSTMACHINE)/stereogr.o \
		.obj/$(HOSTMACHINE)/tranmerc.o \
		.obj/$(HOSTMACHINE)/trcyleqa.o \
		.obj/$(HOSTMACHINE)/ups.o \
		.obj/$(HOSTMACHINE)/utm.o \
		.obj/$(HOSTMACHINE)/engine.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ../libincludes.pro \
		../libmaster.pro \
		geotrans.pro
QMAKE_TARGET = geotrans
DESTDIR  = ../lib/$(HOSTMACHINE)/
TARGET   = libgeotrans.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile_linux ../lib/$(HOSTMACHINE)/$(TARGET) 

staticlib: ../lib/$(HOSTMACHINE)/$(TARGET)

../lib/$(HOSTMACHINE)/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	test -d ../lib/$(HOSTMACHINE)/ || mkdir -p ../lib/$(HOSTMACHINE)/
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET)
	-$(MOVE) $(TARGET) ../lib/$(HOSTMACHINE)/


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile_linux: geotrans.pro  /usr/local/qt/mkspecs/linux-g++/qmake.conf ../libincludes.pro \
		../libmaster.pro \
		/usr/local/qt/lib/libqt-mt.prl
	$(QMAKE) -o Makefile_linux geotrans.pro
qmake: 
	@$(QMAKE) -o Makefile_linux geotrans.pro

dist: 
	@mkdir -p .obj/$(HOSTMACHINE)/geotrans && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/$(HOSTMACHINE)/geotrans/ && ( cd `dirname .obj/$(HOSTMACHINE)/geotrans` && $(TAR) geotrans.tar geotrans && $(GZIP) geotrans.tar ) && $(MOVE) `dirname .obj/$(HOSTMACHINE)/geotrans`/geotrans.tar.gz . && $(DEL_FILE) -r .obj/$(HOSTMACHINE)/geotrans

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/$(HOSTMACHINE)/albers.o: albers/albers.c albers/albers.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/albers.o albers/albers.c

.obj/$(HOSTMACHINE)/azeq.o: azeq/azeq.c azeq/azeq.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/azeq.o azeq/azeq.c

.obj/$(HOSTMACHINE)/bng.o: bng/bng.c bng/bng.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bng.o bng/bng.c

.obj/$(HOSTMACHINE)/bonne.o: bonne/bonne.c bonne/bonne.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bonne.o bonne/bonne.c

.obj/$(HOSTMACHINE)/cassini.o: cassini/cassini.c cassini/cassini.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/cassini.o cassini/cassini.c

.obj/$(HOSTMACHINE)/cyleqa.o: cyleqa/cyleqa.c cyleqa/cyleqa.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/cyleqa.o cyleqa/cyleqa.c

.obj/$(HOSTMACHINE)/datum.o: datum/datum.c datum/datum.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/datum.o datum/datum.c

.obj/$(HOSTMACHINE)/eckert4.o: eckert4/eckert4.c eckert4/eckert4.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/eckert4.o eckert4/eckert4.c

.obj/$(HOSTMACHINE)/eckert6.o: eckert6/eckert6.c eckert6/eckert6.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/eckert6.o eckert6/eckert6.c

.obj/$(HOSTMACHINE)/ellipse.o: ellipse/ellipse.c ellipse/ellipse.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/ellipse.o ellipse/ellipse.c

.obj/$(HOSTMACHINE)/eqdcyl.o: eqdcyl/eqdcyl.c eqdcyl/eqdcyl.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/eqdcyl.o eqdcyl/eqdcyl.c

.obj/$(HOSTMACHINE)/geocent.o: geocent/geocent.c geocent/geocent.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/geocent.o geocent/geocent.c

.obj/$(HOSTMACHINE)/geoid.o: geoid/geoid.c geoid/geoid.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/geoid.o geoid/geoid.c

.obj/$(HOSTMACHINE)/georef.o: georef/georef.c georef/georef.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/georef.o georef/georef.c

.obj/$(HOSTMACHINE)/gnomonic.o: gnomonic/gnomonic.c gnomonic/gnomonic.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/gnomonic.o gnomonic/gnomonic.c

.obj/$(HOSTMACHINE)/grinten.o: grinten/grinten.c grinten/grinten.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/grinten.o grinten/grinten.c

.obj/$(HOSTMACHINE)/lambert.o: lambert/lambert.c lambert/lambert.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/lambert.o lambert/lambert.c

.obj/$(HOSTMACHINE)/loccart.o: loccart/loccart.c loccart/loccart.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/loccart.o loccart/loccart.c

.obj/$(HOSTMACHINE)/mercator.o: mercator/mercator.c mercator/mercator.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/mercator.o mercator/mercator.c

.obj/$(HOSTMACHINE)/mgrs.o: mgrs/mgrs.c mgrs/mgrs.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/mgrs.o mgrs/mgrs.c

.obj/$(HOSTMACHINE)/miller.o: miller/miller.c miller/miller.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/miller.o miller/miller.c

.obj/$(HOSTMACHINE)/mollweid.o: mollweid/mollweid.c mollweid/mollweid.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/mollweid.o mollweid/mollweid.c

.obj/$(HOSTMACHINE)/neys.o: neys/neys.c neys/neys.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/neys.o neys/neys.c

.obj/$(HOSTMACHINE)/nzmg.o: nzmg/nzmg.c nzmg/nzmg.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/nzmg.o nzmg/nzmg.c

.obj/$(HOSTMACHINE)/omerc.o: omerc/omerc.c omerc/omerc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/omerc.o omerc/omerc.c

.obj/$(HOSTMACHINE)/orthogr.o: orthogr/orthogr.c orthogr/orthogr.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/orthogr.o orthogr/orthogr.c

.obj/$(HOSTMACHINE)/polarst.o: polarst/polarst.c polarst/polarst.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/polarst.o polarst/polarst.c

.obj/$(HOSTMACHINE)/polycon.o: polycon/polycon.c polycon/polycon.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/polycon.o polycon/polycon.c

.obj/$(HOSTMACHINE)/sinusoid.o: sinusoid/sinusoid.c sinusoid/sinusoid.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/sinusoid.o sinusoid/sinusoid.c

.obj/$(HOSTMACHINE)/stereogr.o: stereogr/stereogr.c stereogr/stereogr.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/stereogr.o stereogr/stereogr.c

.obj/$(HOSTMACHINE)/tranmerc.o: tranmerc/tranmerc.c tranmerc/tranmerc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/tranmerc.o tranmerc/tranmerc.c

.obj/$(HOSTMACHINE)/trcyleqa.o: trcyleqa/trcyleqa.c trcyleqa/trcyleqa.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/trcyleqa.o trcyleqa/trcyleqa.c

.obj/$(HOSTMACHINE)/ups.o: ups/ups.c ups/ups.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/ups.o ups/ups.c

.obj/$(HOSTMACHINE)/utm.o: utm/utm.c utm/utm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/utm.o utm/utm.c

.obj/$(HOSTMACHINE)/engine.o: engine.c engine.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/engine.o engine.c

####### Install

install:  

uninstall:  

