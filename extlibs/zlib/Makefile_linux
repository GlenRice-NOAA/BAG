#############################################################################
# Makefile for building: libzlib.a
# Generated by qmake (1.07a) (Qt 3.3.3) on: Mon Jul 18 18:54:05 2005
# Project:  zlib.pro
# Template: lib
# Command: $(QMAKE) -o Makefile_linux zlib.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe ${IVSCOPTS} -w -g  -DQT_SHARED -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe ${IVSCCOPTS2} -w -g  -DQT_SHARED -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/local/qt/mkspecs/linux-g++ -I. -I$(QTDIR)/include -I.ui/ -I.moc/$(HOSTMACHINE)/
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/$(HOSTMACHINE)/

####### Files

HEADERS = deflate.h \
		trees.h \
		zutil.h \
		infblock.h \
		inftrees.h \
		infcodes.h \
		infutil.h \
		inffast.h \
		inffixed.h \
		zconf.h
SOURCES = adler32.c \
		compress.c \
		crc32.c \
		gzio.c \
		uncompr.c \
		deflate.c \
		trees.c \
		zutil.c \
		inflate.c \
		infblock.c \
		inftrees.c \
		infcodes.c \
		infutil.c \
		inffast.c
OBJECTS = .obj/$(HOSTMACHINE)/adler32.o \
		.obj/$(HOSTMACHINE)/compress.o \
		.obj/$(HOSTMACHINE)/crc32.o \
		.obj/$(HOSTMACHINE)/gzio.o \
		.obj/$(HOSTMACHINE)/uncompr.o \
		.obj/$(HOSTMACHINE)/deflate.o \
		.obj/$(HOSTMACHINE)/trees.o \
		.obj/$(HOSTMACHINE)/zutil.o \
		.obj/$(HOSTMACHINE)/inflate.o \
		.obj/$(HOSTMACHINE)/infblock.o \
		.obj/$(HOSTMACHINE)/inftrees.o \
		.obj/$(HOSTMACHINE)/infcodes.o \
		.obj/$(HOSTMACHINE)/infutil.o \
		.obj/$(HOSTMACHINE)/inffast.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ../libincludes.pro \
		../libmaster.pro \
		zlib.pro
QMAKE_TARGET = zlib
DESTDIR  = ../lib/$(HOSTMACHINE)/
TARGET   = libzlib.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile_linux ../lib/$(HOSTMACHINE)/$(TARGET) 

staticlib: ../lib/$(HOSTMACHINE)/$(TARGET)

../lib/$(HOSTMACHINE)/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	test -d ../lib/$(HOSTMACHINE)/ || mkdir -p ../lib/$(HOSTMACHINE)/
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET)
	-$(MOVE) $(TARGET) ../lib/$(HOSTMACHINE)/


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile_linux: zlib.pro  /usr/local/qt/mkspecs/linux-g++/qmake.conf ../libincludes.pro \
		../libmaster.pro \
		/usr/local/qt/lib/libqt-mt.prl
	$(QMAKE) -o Makefile_linux zlib.pro
qmake: 
	@$(QMAKE) -o Makefile_linux zlib.pro

dist: 
	@mkdir -p .obj/$(HOSTMACHINE)/zlib && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/$(HOSTMACHINE)/zlib/ && ( cd `dirname .obj/$(HOSTMACHINE)/zlib` && $(TAR) zlib.tar zlib && $(GZIP) zlib.tar ) && $(MOVE) `dirname .obj/$(HOSTMACHINE)/zlib`/zlib.tar.gz . && $(DEL_FILE) -r .obj/$(HOSTMACHINE)/zlib

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/$(HOSTMACHINE)/adler32.o: adler32.c zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/adler32.o adler32.c

.obj/$(HOSTMACHINE)/compress.o: compress.c zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/compress.o compress.c

.obj/$(HOSTMACHINE)/crc32.o: crc32.c zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/crc32.o crc32.c

.obj/$(HOSTMACHINE)/gzio.o: gzio.c zutil.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/gzio.o gzio.c

.obj/$(HOSTMACHINE)/uncompr.o: uncompr.c zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/uncompr.o uncompr.c

.obj/$(HOSTMACHINE)/deflate.o: deflate.c deflate.h \
		zutil.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/deflate.o deflate.c

.obj/$(HOSTMACHINE)/trees.o: trees.c deflate.h \
		trees.h \
		zutil.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/trees.o trees.c

.obj/$(HOSTMACHINE)/zutil.o: zutil.c zutil.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/zutil.o zutil.c

.obj/$(HOSTMACHINE)/inflate.o: inflate.c zutil.h \
		infblock.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/inflate.o inflate.c

.obj/$(HOSTMACHINE)/infblock.o: infblock.c zutil.h \
		infblock.h \
		inftrees.h \
		infcodes.h \
		infutil.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/infblock.o infblock.c

.obj/$(HOSTMACHINE)/inftrees.o: inftrees.c zutil.h \
		inftrees.h \
		inffixed.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/inftrees.o inftrees.c

.obj/$(HOSTMACHINE)/infcodes.o: infcodes.c zutil.h \
		inftrees.h \
		infblock.h \
		infcodes.h \
		infutil.h \
		inffast.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/infcodes.o infcodes.c

.obj/$(HOSTMACHINE)/infutil.o: infutil.c zutil.h \
		infblock.h \
		inftrees.h \
		infcodes.h \
		infutil.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/infutil.o infutil.c

.obj/$(HOSTMACHINE)/inffast.o: inffast.c zutil.h \
		inftrees.h \
		infblock.h \
		infcodes.h \
		infutil.h \
		inffast.h \
		zlib.h \
		zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/inffast.o inffast.c

####### Install

install:  

uninstall:  

