#############################################################################
# Makefile for building: libbag.so.1.0.0
# Generated by qmake (1.05a) (Qt 3.1.2) on: Wed Mar  8 15:12:53 2006
# Project:  bag.pro
# Template: lib
# Command: $(QMAKE) -o Makefile bag.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe ${IVSCOPTS} -w -fPIC  -DBEE_STATIC
CXXFLAGS = -pipe ${IVSCCOPTS2} -w -fPIC  -DBEE_STATIC
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/default -I. -I../api -I../extlibs/hdf5-1.6.1/src -I../extlibs/geotrans -I../extlibs/beecrypt-4.1.2 -I../extlibs -I$(XERCESCROOT)/src
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libbag.so.1
LIBS     = $(SUBLIBS)  
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/$(HOSTMACHINE)/

####### Files

HEADERS = stdtypes.h \
		crc32.h \
		onscrypto.h \
		ons_xml.h \
		ons_xml_error_handler.h \
		bag_private.h \
		bag.h
SOURCES = crc32.c \
		onscrypto.c \
		ons_xml.cpp \
		bag_attr.c \
		bag_crypto.c \
		bag_geotrans.c \
		bag_hdf.c \
		bag_surfaces.c \
		bag_tracking_list.c \
		bag_xml.c
OBJECTS = .obj/$(HOSTMACHINE)/crc32.o \
		.obj/$(HOSTMACHINE)/onscrypto.o \
		.obj/$(HOSTMACHINE)/ons_xml.o \
		.obj/$(HOSTMACHINE)/bag_attr.o \
		.obj/$(HOSTMACHINE)/bag_crypto.o \
		.obj/$(HOSTMACHINE)/bag_geotrans.o \
		.obj/$(HOSTMACHINE)/bag_hdf.o \
		.obj/$(HOSTMACHINE)/bag_surfaces.o \
		.obj/$(HOSTMACHINE)/bag_tracking_list.o \
		.obj/$(HOSTMACHINE)/bag_xml.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = libincludes.pro \
		libmaster.pro \
		bag.pro
QMAKE_TARGET = bag
DESTDIR  = ../lib/$(HOSTMACHINE)/
TARGET   = libbag.so.1.0.0
TARGETA	= ../lib/$(HOSTMACHINE)/libbag.a
TARGETD	= libbag.so.1.0.0
TARGET0	= libbag.so
TARGET1	= libbag.so.1
TARGET2	= libbag.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  ../lib/$(HOSTMACHINE)/$(TARGET)

../lib/$(HOSTMACHINE)/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) 
	test -d ../lib/$(HOSTMACHINE)/ || mkdir -p ../lib/$(HOSTMACHINE)/
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET)
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET0)
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET1)
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../lib/$(HOSTMACHINE)/



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: bag.pro  $(QTDIR)/mkspecs/default/qmake.conf libincludes.pro \
		libmaster.pro
	$(QMAKE) -o Makefile bag.pro
qmake: 
	@$(QMAKE) -o Makefile bag.pro

dist: 
	@mkdir -p .obj/$(HOSTMACHINE)/bag && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/$(HOSTMACHINE)/bag/ && ( cd `dirname .obj/$(HOSTMACHINE)/bag` && $(TAR) bag.tar bag && $(GZIP) bag.tar ) && $(MOVE) `dirname .obj/$(HOSTMACHINE)/bag`/bag.tar.gz . && $(DEL_FILE) -r .obj/$(HOSTMACHINE)/bag

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET) $(TARGET)
	-$(DEL_FILE) ../lib/$(HOSTMACHINE)/$(TARGET0) ../lib/$(HOSTMACHINE)/$(TARGET1) ../lib/$(HOSTMACHINE)/$(TARGET2) $(TARGETA)


FORCE:

####### Compile

.obj/$(HOSTMACHINE)/crc32.o: crc32.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/crc32.o crc32.c

.obj/$(HOSTMACHINE)/onscrypto.o: onscrypto.c crc32.h \
		onscrypto.h \
		stdtypes.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/onscrypto.o onscrypto.c

.obj/$(HOSTMACHINE)/ons_xml.o: ons_xml.cpp ons_xml_error_handler.h \
		ons_xml.h \
		bag.h \
		stdtypes.h \
		dt_cc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/ons_xml.o ons_xml.cpp

.obj/$(HOSTMACHINE)/bag_attr.o: bag_attr.c bag_private.h \
		bag.h \
		stdtypes.h \
		dt_cc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bag_attr.o bag_attr.c

.obj/$(HOSTMACHINE)/bag_crypto.o: bag_crypto.c bag.h \
		onscrypto.h \
		stdtypes.h \
		dt_cc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bag_crypto.o bag_crypto.c

.obj/$(HOSTMACHINE)/bag_geotrans.o: bag_geotrans.c bag.h \
		stdtypes.h \
		dt_cc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bag_geotrans.o bag_geotrans.c

.obj/$(HOSTMACHINE)/bag_hdf.o: bag_hdf.c bag_private.h \
		bag.h \
		stdtypes.h \
		dt_cc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bag_hdf.o bag_hdf.c

.obj/$(HOSTMACHINE)/bag_surfaces.o: bag_surfaces.c bag_private.h \
		bag.h \
		stdtypes.h \
		dt_cc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bag_surfaces.o bag_surfaces.c

.obj/$(HOSTMACHINE)/bag_tracking_list.o: bag_tracking_list.c bag_private.h \
		bag.h \
		stdtypes.h \
		dt_cc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bag_tracking_list.o bag_tracking_list.c

.obj/$(HOSTMACHINE)/bag_xml.o: bag_xml.c bag.h \
		ons_xml.h \
		stdtypes.h \
		dt_cc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/$(HOSTMACHINE)/bag_xml.o bag_xml.c

####### Install

install: all 

uninstall: 

