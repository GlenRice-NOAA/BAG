# 
# Xerces Settings
#
IF(MSVC)
# The location of the xerces header files.
SET(XERCESC_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/extlibs/xerces-c/src/" CACHE STRING "Location of xerces header files.")
# The location of the xerces libraries.
SET(XERCESC_LIB_DIR "${PROJECT_SOURCE_DIR}/extlibs/xerces-c/Build/Win64/VC9/Release/" CACHE STRING "The location of the xerces library.")
# The name of the xerces release library.
SET(XERCESC_LIB_RELEASE "xerces-c_3.lib" CACHE STRING "The name of the xerces release library.")
ELSEIF(UNIX)
# The location of the xerces header files.
SET(XERCESC_INCLUDE_DIR "/usr/include/xercesc" CACHE STRING "Location of xerces header files.")
# The name of the xerces release library.
SET(XERCESC_LIB_RELEASE "xerces-c" CACHE STRING "The name of the xerces release library.")
ELSEIF(MINGW)
# The location of the xerces header files.
SET(XERCESC_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/extlibs/xerces-c/installed/include/" CACHE STRING "Location of xerces header files.")
# The location of the xerces libraries.
SET(XERCESC_LIB_DIR "${PROJECT_SOURCE_DIR}/extlibs/xerces-c/installed/lib/" CACHE STRING "The location of the xerces library.")
# The name of the xerces release library.
SET(XERCESC_LIB_RELEASE "libxerces-c" CACHE STRING "The name of the xerces release library.")
ENDIF(MSVC)

# 
# Hdf5 Settings
#
IF(MSVC)
# The location of the Hdf5 header files.
SET(HDF5_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/extlibs/hdf5/installed/include" CACHE STRING "Location of hdf5 header files.")
# The location of the Hdf5 libraries.
SET(HDF5_LIB_DIR "${PROJECT_SOURCE_DIR}/extlibs/hdf5/installed/lib/" CACHE STRING "The location of the hdf5 library.")
# The name of the Hdf5 release library.
SET(HDF5_LIB_RELEASE "hdf5dll.lib" CACHE STRING "The name of the hdf5 release library.")
ELSEIF(UNIX)
# The location of the Hdf5 header files.
SET(HDF5_INCLUDE_DIR "/usr/include" CACHE STRING "Location of hdf5 header files.")
# The name of the Hdf5 release library.
SET(HDF5_LIB_RELEASE "hdf5" CACHE STRING "The name of the hdf5 release library.")
ELSEIF(MINGW)
# The location of the Hdf5 header files.
SET(HDF5_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/extlibs/hdf5/installed/include" CACHE STRING "Location of hdf5 header files.")
# The location of the Hdf5 libraries.
SET(HDF5_LIB_DIR "${PROJECT_SOURCE_DIR}/extlibs/hdf5/installed/lib/" CACHE STRING "The location of the hdf5 library.")
# The name of the Hdf5 release library.
SET(HDF5_LIB_RELEASE "hdf5" CACHE STRING "The name of the hdf5 release library.")
ENDIF(MSVC)

# 
# beecrypt Settings
#
IF(MSVC)
# The location of the beecrypt header files.
SET(BEECRYPT_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/extlibs/" CACHE STRING "Location of beecrypt header files.")
# The location of the beecrypt libraries.
SET(BEECRYPT_LIB_DIR "${PROJECT_SOURCE_DIR}/extlibs/beecrypt/" CACHE STRING "The location of the beecrypt library.")
# The name of the beecrypt release library.
SET(BEECRYPT_LIB_RELEASE "beecrypt.lib" CACHE STRING "The name of the beecrypt release library.")
ELSEIF(UNIX)
# The location of the beecrypt header files.
SET(BEECRYPT_INCLUDE_DIR "/usr/include" CACHE STRING "Location of beecrypt header files.")
# The name of the beecrypt release library.
SET(BEECRYPT_LIB_RELEASE "beecrypt" CACHE STRING "The name of the beecrypt release library.")
ELSEIF(MINGW)
# The location of the beecrypt header files.
SET(BEECRYPT_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/extlibs/beecrypt/installed/include/" CACHE STRING "Location of beecrypt header files.")
# The location of the beecrypt libraries.
SET(BEECRYPT_LIB_DIR "${PROJECT_SOURCE_DIR}/extlibs/beecrypt/installed/lib/" CACHE STRING "The location of the beecrypt library.")
# The name of the beecrypt release library.
SET(BEECRYPT_LIB_RELEASE "beecrypt" CACHE STRING "The name of the beecrypt release library.")
ENDIF(MSVC)

include_directories (${XERCESC_INCLUDE_DIR} ${HDF5_INCLUDE_DIR} ${BEECRYPT_INCLUDE_DIR}) 
link_directories(${XERCESC_LIB_DIR} ${HDF5_LIB_DIR} ${BEECRYPT_LIB_DIR})

#Produce a shared library.
set (LIB_TYPE SHARED)

#The debug build will have a 'd' postfix
SET(CMAKE_DEBUG_POSTFIX  "d")

#Preset install dir
IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  SET(CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}/installed" CACHE PATH "CMAKE_INSTALL_PREFIX" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

#Use the version 1 interface for HDF5
add_definitions(-D H5_USE_16_API)

IF(MSVC)
    #ignore some warnings generated by windows.
    add_definitions(/D_CRT_SECURE_NO_WARNINGS /D _CRT_NONSTDC_NO_DEPRECATE)
    
    #compile using the dll.
    add_definitions(/D BAG_DLL /D BAG_EXPORTS)
ENDIF(MSVC)

#List all of the bag api source files.
set (BAG_SOURCE_FILES 
 bag_attr.c
 bag_crypto.c
 bag_epsg.c
 bag_hdf.c
 bag_opt_group.c
 bag_opt_surfaces.c
 bag_reference_system.cpp
 bag_surface_correct.c
 bag_surfaces.c
 bag_tracking_list.c
 bag_xml.c
 crc32.c
 ons_xml.cpp
 onscrypto.c)
source_group("Source Files" FILES ${BAG_SOURCE_FILES})
 
set (BAG_HEADER_FILES 
 bag.h
 bag_opt_surfaces.h
 bag_private.h
 crc32.h
 dt_cc.h
 ons_xml.h
 ons_xml_error_handler.h
 onscrypto.h
 stdtypes.h)
source_group("Header Files" FILES ${BAG_HEADER_FILES})
 
add_library (bag ${LIB_TYPE} ${BAG_SOURCE_FILES} ${BAG_HEADER_FILES} )

target_link_libraries(bag general ${XERCESC_LIB_RELEASE})
target_link_libraries(bag general ${HDF5_LIB_RELEASE})
target_link_libraries(bag general ${BEECRYPT_LIB_RELEASE})
